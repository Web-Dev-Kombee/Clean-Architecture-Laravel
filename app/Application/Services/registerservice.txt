<?php
namespace App\Services;

use App\Models\User;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Validator;
use Illuminate\Validation\ValidationException;

class RegisterUserService
{
    /**
     * Validate and create a new user.
     *
     * @param array $data
     * @return User
     * @throws ValidationException
     */
    public function registerUser(array $data): User
    {
        // Validate the incoming data
        $validator = Validator::make($data, [
            'first_name'    => 'required|alpha|max:255',
            'last_name'     => 'required|alpha|max:255',
            'email'         => 'required|email|unique:users,email',
            'phone_number'  => 'required|regex:/^\+?[0-9]{10,15}$/', // Validate phone number with prefix and 10-15 digits
            'password'      => 'required|confirmed|min:8',
            'technology'    => 'required|string|max:255',
            'experience'    => 'required|integer|min:0',
        ]);

        // If validation fails, throw an exception
        if ($validator->fails()) {
            throw new ValidationException($validator);
        }

        // Create a new user record
        return User::create([
            'first_name'    => $data['first_name'],
            'last_name'     => $data['last_name'],
            'email'         => $data['email'],
            'phone_number'  => $data['phone_number'],
            'password'      => Hash::make($data['password']),
            'technology'    => $data['technology'],
            'experience'    => $data['experience'],
        ]);
    }
}
